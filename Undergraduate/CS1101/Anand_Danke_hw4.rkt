#reader(lib"read.ss""wxme")WXME0108 ## 
#|
   This file uses the GRacket editor format.
   Open this file in DrRacket version 6.10 or later to read it.

   Most likely, it was created by saving a program in DrRacket,
   and it probably contains a program with non-text elements
   (such as images or comment boxes).

            http://racket-lang.org/
|#
 33 7 #"wxtext\0"
3 1 6 #"wxtab\0"
1 1 8 #"wximage\0"
2 0 8 #"wxmedia\0"
4 1 34 #"(lib \"syntax-browser.ss\" \"mrlib\")\0"
1 0 36 #"(lib \"cache-image-snip.ss\" \"mrlib\")\0"
1 0 68
(
 #"((lib \"image-core.ss\" \"mrlib\") (lib \"image-core-wxme.rkt\" \"mr"
 #"lib\"))\0"
) 1 0 16 #"drscheme:number\0"
3 0 44 #"(lib \"number-snip.ss\" \"drscheme\" \"private\")\0"
1 0 36 #"(lib \"comment-snip.ss\" \"framework\")\0"
1 0 93
(
 #"((lib \"collapsed-snipclass.ss\" \"framework\") (lib \"collapsed-sni"
 #"pclass-wxme.ss\" \"framework\"))\0"
) 0 0 43 #"(lib \"collapsed-snipclass.ss\" \"framework\")\0"
0 0 19 #"drscheme:sexp-snip\0"
0 0 29 #"drscheme:bindings-snipclass%\0"
1 0 101
(
 #"((lib \"ellipsis-snip.rkt\" \"drracket\" \"private\") (lib \"ellipsi"
 #"s-snip-wxme.rkt\" \"drracket\" \"private\"))\0"
) 2 0 88
(
 #"((lib \"pict-snip.rkt\" \"drracket\" \"private\") (lib \"pict-snip.r"
 #"kt\" \"drracket\" \"private\"))\0"
) 0 0 55
#"((lib \"snip.rkt\" \"pict\") (lib \"snip-wxme.rkt\" \"pict\"))\0"
1 0 34 #"(lib \"bullet-snip.rkt\" \"browser\")\0"
0 0 25 #"(lib \"matrix.ss\" \"htdp\")\0"
1 0 22 #"drscheme:lambda-snip%\0"
1 0 29 #"drclickable-string-snipclass\0"
0 0 26 #"drracket:spacer-snipclass\0"
0 0 57
#"(lib \"hrule-snip.rkt\" \"macro-debugger\" \"syntax-browser\")\0"
1 0 26 #"drscheme:pict-value-snip%\0"
0 0 45 #"(lib \"image-snipr.ss\" \"slideshow\" \"private\")\0"
1 0 38 #"(lib \"pict-snipclass.ss\" \"slideshow\")\0"
2 0 55 #"(lib \"vertical-separator-snip.ss\" \"stepper\" \"private\")\0"
1 0 18 #"drscheme:xml-snip\0"
1 0 31 #"(lib \"xml-snipclass.ss\" \"xml\")\0"
1 0 21 #"drscheme:scheme-snip\0"
2 0 34 #"(lib \"scheme-snipclass.ss\" \"xml\")\0"
1 0 10 #"text-box%\0"
1 0 32 #"(lib \"text-snipclass.ss\" \"xml\")\0"
1 0 1 6 #"wxloc\0"
          0 0 76 0 1 #"\0"
0 75 1 #"\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 0 9
#"Standard\0"
0 75 6 #"Menlo\0"
0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0 0 0 0 0 0 0 0 0 255 255 255 1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1 1 1 1 1 1 0 0 0 0 0 0 -1 -1 2 24
#"framework:default-color\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 15
#"text:ports out\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 150 0 150 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 255 0 0 0 0 0 -1
-1 2 15 #"text:ports err\0"
0 -1 1 #"\0"
1 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 17
#"text:ports value\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 175 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 27 #"Matching Parenthesis Style\0"
0 -1 1 #"\0"
1.0 0 92 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 34 139 34 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:symbol\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 38
#"framework:syntax-color:scheme:keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 38 38 128 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2
38 #"framework:syntax-color:scheme:comment\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 194 116 31 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 37
#"framework:syntax-color:scheme:string\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 35
#"framework:syntax-color:scheme:text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 39
#"framework:syntax-color:scheme:constant\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 41 128 38 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 49
#"framework:syntax-color:scheme:hash-colon-keyword\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 42
#"framework:syntax-color:scheme:parenthesis\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 132 60 36 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:error\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 36
#"framework:syntax-color:scheme:other\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 16
#"Misspelled Text\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2
38 #"drracket:check-syntax:lexically-bound\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 81 112 203 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 28
#"drracket:check-syntax:set!d\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 37
#"drracket:check-syntax:unused-require\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 36
#"drracket:check-syntax:free-variable\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 255 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 31
#"drracket:check-syntax:imported\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 68 0 203 0 0 0 -1 -1 2 47
#"drracket:check-syntax:my-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 178 34 34 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 50
#"drracket:check-syntax:their-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 116 0 0 0 0 -1 -1 2 48
#"drracket:check-syntax:unk-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
49 #"drracket:check-syntax:both-obligation-style-pref\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 139 142 28 0 0 0 -1 -1 2
26 #"plt:htdp:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 1
#"\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 2 27
#"plt:htdp:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 4 #"XML\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 37 #"plt:module-language:test-coverage-on\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0 0 0 1 1 1 0 0 0 0 0 0 -1 -1 2 38
#"plt:module-language:test-coverage-off\0"
0 -1 1 #"\0"
1 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 1 0 0 0 0 0 0 255 165 0 0 0 0 -1 -1 4 1
#"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 0 255 0 0 0 -1
-1 4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0 0 0 1.0 1.0 1.0 0 100 0 0 0 0 -1
-1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0 0 0 1.0 1.0 1.0 65 105 225 0 0 0
-1 -1 4 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
17 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
24 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
44 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
15 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
21 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
46 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
0 1 #"\0"
0 75 6 #"Menlo\0"
0.0 12 90 -1 90 -1 3 -1 0 1 0 1 0 0 0.0 0.0 0.0 0.0 0.0 0.0 0 0 0 255
255 255 1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 150 0 150 0
0 0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 93 -1 -1 0 1 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 175 0 0
0 -1 -1 14 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 1 0 0 0 0 0 0 0 0 0 0 255 255 255 -1 -1
4 1 #"\0"
0 71 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 255 0 0 0 0
0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 93 -1 -1 -1 0 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 148 0 211 0
0 0 -1 -1 2 1 #"\0"
0 70 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 1 0 0 0 0 0 0.0 0.0 0.0 1.0 1.0 1.0 0 0 255 0 0
0 -1 -1 0 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 2 1 #"\0"
0 -1 1 #"\0"
0.0 13 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
-1 -1 0 1 #"\0"
0 -1 1 #"\0"
1.0 0 -1 -1 -1 -1 -1 -1 0 0 0 0 0 0 1.0 1.0 1.0 1.0 1.0 1.0 0 0 0 0 0 0
0 -1           0 1737 0 4 3 85
(
 #";; The first three lines of this file were inserted by DrRacket. The"
 #"y record metadata"
) 0 0 4 29 1 #"\n"
0 0 4 3 85
(
 #";; about the language level of this file in a form that our tools ca"
 #"n easily process."
) 0 0 4 29 1 #"\n"
0 0 4 3 190
(
 #"#reader(lib \"htdp-beginner-abbr-reader.ss\" \"lang\")((modname Anan"
 #"d-Danke-hw4) (read-case-sensitive #t) (teachpacks ()) (htdp-settings"
 #" #(#t constructor repeating-decimal #f #t none #f () #t)))"
) 0 0 4 29 1 #"\n"
0 0 17 3 32 #";;Vandana Anand and Manasi Danke"
0 0 24 29 1 #"\n"
0 0 17 3 20 #";;vanand and mmdanke"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Problem 1"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 7 #"contact"
0 0 24 3 2 #" ("
0 0 14 3 4 #"name"
0 0 24 3 1 #" "
0 0 14 3 7 #"address"
0 0 24 3 1 #" "
0 0 14 3 5 #"email"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 52 #";;a Contact is a (make-contact String String String)"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";;a Contact where"
0 0 24 29 1 #"\n"
0 0 17 3 29 #";;name is the customer's name"
0 0 24 29 1 #"\n"
0 0 17 3 35 #";;address is the customer's address"
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;email is the customer's email address"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 6 #"charge"
0 0 24 3 2 #" ("
0 0 14 3 7 #"busname"
0 0 24 3 1 #" "
0 0 14 3 6 #"amount"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 43 #";;a Charge is a (make-charge String Number)"
0 0 24 29 1 #"\n"
0 0 17 3 16 #";;a Charge where"
0 0 24 29 1 #"\n"
0 0 17 3 68
#";;busname is the name of the business where the credit card was used"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";;amount is the amount that was charged, in dollars"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 25 #";;ListOfCharge is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";;empty"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;(cons Charge ListOfCharge)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;Examples"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact1"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Carl Wong\""
0 0 24 3 1 #" "
0 0 19 3 14 #"\"32 Freed Way\""
0 0 24 3 1 #" "
0 0 19 3 17 #"\"cwong@gmail.com\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact2"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Sally Pink\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"48 Utili Road\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"pinks@wpi.edu\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact3"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Tally Simpson\""
0 0 24 3 1 #" "
0 0 19 3 19 #"\"65 Wilbert Avenue\""
0 0 24 3 1 #" "
0 0 19 3 21 #"\"simptal@hotmail.com\""
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"Charge1"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-charge"
0 0 24 3 1 #" "
0 0 19 3 9 #"\"Walmart\""
0 0 24 3 1 #" "
0 0 21 3 3 #"300"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"Charge2"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-charge"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Amazon\""
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 7 #"Charge3"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-charge"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"K-Mart\""
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc1"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"Charge1"
0 0 24 3 1 #" "
0 0 14 3 7 #"Charge2"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc2"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-charge"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Target\""
0 0 24 3 1 #" "
0 0 21 3 3 #"150"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-charge"
0 0 24 3 1 #" "
0 0 19 3 5 #"\"JCP\""
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 1 #" "
0 0 14 3 7 #"Charge2"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc3"
0 0 24 3 2 #" ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-charge"
0 0 24 3 1 #" "
0 0 19 3 8 #"\"Macy's\""
0 0 24 3 1 #" "
0 0 21 3 3 #"210"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-charge"
0 0 24 3 1 #" "
0 0 19 3 15 #"\"Stop and Shop\""
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 3 #") ("
0 0 14 3 4 #"cons"
0 0 24 3 2 #" ("
0 0 14 3 11 #"make-charge"
0 0 24 3 1 #" "
0 0 19 3 6 #"\"Shop\""
0 0 24 3 1 #" "
0 0 21 3 2 #"37"
0 0 24 3 2 #") "
0 0 14 3 5 #"empty"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc4"
0 0 24 3 2 #" ("
0 0 14 3 4 #"list"
0 0 24 3 1 #" "
0 0 14 3 7 #"Charge2"
0 0 24 3 1 #" "
0 0 14 3 7 #"Charge3"
0 0 24 3 1 #" "
0 0 14 3 7 #"Charge1"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Problem 2"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         595 21           0 0           0 98 0 17 3 29
#";;fcn-for-contact: Contact ->"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"fcn-for-contact"
0 0 24 3 1 #" "
0 0 14 3 9 #"a-contact"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 12 #"contact-name"
0 0 24 3 1 #" "
0 0 14 3 9 #"a-contact"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 15 #"contact-address"
0 0 24 3 1 #" "
0 0 14 3 9 #"a-contact"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 13 #"contact-email"
0 0 24 3 1 #" "
0 0 14 3 9 #"a-contact"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 27 #";;fcn-for-charge: Charge ->"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"fcn-for-charge"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-charge"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 14 #"charge-busname"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-charge"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 8 #"       ("
0 0 14 3 13 #"charge-amount"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-charge"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 31 #";;fcn-for-aloc: ListOfCharge ->"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"fcn-for-aloc"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloc"
0 0 24 3 2 #") "
0 0 14 3 3 #"..."
0 0 24 3 2 #" ]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloc"
0 0 24 3 3 #") ("
0 0 14 3 14 #"fcn-for-charge"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 12 #"fcn-for-aloc"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloc"
0 0 24 3 6 #")))]))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Problem 3"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";; a BST is one of"
0 0 24 29 1 #"\n"
0 0 17 3 10 #";;   false"
0 0 24 29 1 #"\n"
0 0 17 3 13 #";;   CustNode"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 78
(
 #";; a CustNode is a (make-customer Natural Contact Number ListOfCharg"
 #"e BST BST)"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 13 #"define-struct"
0 0 24 3 1 #" "
0 0 14 3 8 #"customer"
0 0 24 3 2 #" ("
0 0 14 3 11 #"card-number"
0 0 24 3 1 #" "
0 0 14 3 7 #"contact"
0 0 24 3 1 #" "
0 0 14 3 5 #"limit"
0 0 24 3 1 #" "
0 0 14 3 7 #"charges"
0 0 24 3 1 #" "
0 0 14 3 4 #"left"
0 0 24 3 1 #" "
0 0 14 3 5 #"right"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 17 3 18 #";;a CustNode where"
0 0 24 29 1 #"\n"
0 0 17 3 46 #";;card-number is the number on the credit card"
0 0 24 29 1 #"\n"
0 0 17 3 47 #";;contact is the customer's contact information"
0 0 24 29 1 #"\n"
0 0 17 3 28 #";;limit is the credit limit "
0 0 24 29 1 #"\n"
0 0 17 3 45 #";;charges are the list of charges on the card"
0 0 24 29 1 #"\n"
0 0 17 3 37 #";;left is left branch of the tree    "
0 0 24 29 1 #"\n"
0 0 17 3 39 #";;right is the right branch of the tree"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;INVARIANT"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";;left"
0 0 17 3 1 #" "
0 0 17 3 2 #"is"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"root"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"tree"
0 0 17 3 1 #" "
0 0 17 3 12 #"representing"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"left"
0 0 17 3 1 #" "
0 0 17 3 6 #"branch"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"tree"
0 0 17 3 1 #" "
0 0 17 3 5 #"where"
0 0 17 3 1 #" "
0 0 17 3 3 #"all"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"credit"
0 0 17 3 1 #" "
0 0 17 3 4 #"card"
0 0 17 3 1 #" "
0 0 17 3 7 #"numbers"
0 0 17 3 1 #" "
0 0 17 3 3 #"are"
0 0 17 3 1 #" "
0 0 17 3 28 #"less than the root node     "
0 0 24 29 1 #"\n"
0 0 17 3 135
(
 #";;right is the root of the tree representing the right branch of the"
 #" tree where all the credit card numbers are more than the root node"
) 0 0 24 29 1 #"\n"
0 0 17 3 59
#";;all nodes must be unique meaning no node can be the same "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 23 #";;a CustNode is one of:"
0 0 24 29 1 #"\n"
0 0 17 3 7 #";;false"
0 0 24 29 1 #"\n"
0 0 17 3 61
#";;(make-customer Natural Contact Number ListOfCharge BST BST)"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Problem 4"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"BST1"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact1"
0 0 24 3 1 #" "
0 0 21 3 4 #"3000"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc1"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact2"
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc2"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact3"
0 0 24 3 1 #" "
0 0 21 3 4 #"3500"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Susan Piet\""
0 0 24 3 1 #" "
0 0 19 3 17 #"\"60 Yoili Avenue\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"piets@neu.edu\""
0 0 24 3 2 #") "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc3"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"205"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"Fityo Chang\""
0 0 24 3 1 #" "
0 0 19 3 14 #"\"35 Lemay Way\""
0 0 24 3 1 #" "
0 0 19 3 17 #"\"changf@colu.edu\""
0 0 24 3 2 #") "
0 0 21 3 4 #"1500"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 1 #" "
0 0 14 3 4 #"BST2"
0 0 24 3 2 #" ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"126"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact2"
0 0 24 3 1 #" "
0 0 21 3 4 #"3000"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc1"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 2 #"43"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Didi Dong\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"59 Yout Way\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"didid@col.com\""
0 0 24 3 2 #") "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc4"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 2 #"26"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"Hercules Google\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"46 Chant Road\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"changf@BU.net\""
0 0 24 3 2 #") "
0 0 21 3 4 #"1500"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc4"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"151"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact3"
0 0 24 3 1 #" "
0 0 21 3 4 #"1200"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"162"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact1"
0 0 24 3 1 #" "
0 0 21 3 4 #"2200"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc4"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 4 #"))))"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Problem 5"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 9         427 21           0 0           0 70 0 17 3 31
#";;fcn-for-custnode: CustNode ->"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"fcn-for-custnode"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 9 #"customer?"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 3 #") ("
0 0 14 3 3 #"..."
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 15 #"fcn-for-contact"
0 0 24 3 1 #"("
0 0 14 3 16 #"customer-contact"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 14 #"customer-limit"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 12 #"fcn-for-aloc"
0 0 24 3 1 #"("
0 0 14 3 16 #"customer-charges"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 16 #"fcn-for-custnode"
0 0 24 3 2 #" ("
0 0 14 3 13 #"customer-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 16 #"fcn-for-custnode"
0 0 24 3 2 #" ("
0 0 14 3 14 #"customer-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 6 #")))]))"
0           0 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Problem 6"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;count-big-limits: BST Number -> Natural "
0 0 24 29 1 #"\n"
0 0 17 3 100
(
 #";;consumes a binary search tree and a credit limit amount, and count"
 #"s the number of customers in the"
) 0 0 24 29 1 #"\n"
0 0 17 3 6 #";;tree"
0 0 17 3 1 #" "
0 0 17 3 3 #"who"
0 0 17 3 1 #" "
0 0 17 3 4 #"have"
0 0 17 3 1 #" "
0 0 17 3 1 #"a"
0 0 17 3 1 #" "
0 0 17 3 6 #"credit"
0 0 17 3 36 #" limit higher than the given amount."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 16 #"count-big-limits"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #" "
0 0 14 3 12 #"credit-limit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 9 #"customer?"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #">"
0 0 24 3 2 #" ("
0 0 14 3 14 #"customer-limit"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #") "
0 0 14 3 12 #"credit-limit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"1"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 16 #"count-big-limits"
0 0 24 3 2 #" ("
0 0 14 3 13 #"customer-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #") "
0 0 14 3 12 #"credit-limit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 16 #"count-big-limits"
0 0 24 3 2 #" ("
0 0 14 3 14 #"customer-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #") "
0 0 14 3 12 #"credit-limit"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 1 #"+"
0 0 24 3 1 #" "
0 0 21 3 1 #"0"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 16 #"count-big-limits"
0 0 24 3 2 #" ("
0 0 14 3 13 #"customer-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #") "
0 0 14 3 12 #"credit-limit"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 16 #"count-big-limits"
0 0 24 3 2 #" ("
0 0 14 3 14 #"customer-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #") "
0 0 14 3 12 #"credit-limit"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"count-big-limits"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 4 #"1000"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 17 3 11 #";;base case"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"count-big-limits"
0 0 24 3 1 #" "
0 0 14 3 4 #"BST1"
0 0 24 3 1 #" "
0 0 21 3 4 #"4000"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 17 3 72
(
 #";;No one in the tree has credit limit higher than the given credit l"
 #"imit"
) 0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 16 #"count-big-limits"
0 0 24 3 1 #" "
0 0 14 3 4 #"BST1"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 2 #") "
0 0 21 3 1 #"5"
0 0 24 3 2 #") "
0 0 17 3 74
(
 #";;Everyone in the tree has credit limit higher than the given credit"
 #" limit"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Problem 7"
0 0 24 29 1 #"\n"
0 0 17 3 33 #";;any-over-limit?: BST -> Boolean"
0 0 24 29 1 #"\n"
0 0 17 3 96
(
 #";;consumes a binary search tree and produces true if any customer in"
 #" the tree has an outstanding"
) 0 0 24 29 1 #"\n"
0 0 17 3 41 #";;balance greater than their credit limit"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 15 #"any-over-limit?"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 9 #"customer?"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 1 #"("
0 0 14 3 1 #"<"
0 0 24 3 2 #" ("
0 0 14 3 14 #"customer-limit"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 3 #") ("
0 0 14 3 13 #"cust-balances"
0 0 24 3 2 #" ("
0 0 14 3 16 #"customer-charges"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 3 #")))"
0 0 24 29 1 #"\n"
0 0 24 3 30 #"                              "
0 0 14 3 4 #"true"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 2 #"or"
0 0 24 3 2 #" ("
0 0 14 3 15 #"any-over-limit?"
0 0 24 3 2 #" ("
0 0 14 3 13 #"customer-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 35 #"                                  ("
0 0 14 3 15 #"any-over-limit?"
0 0 24 3 2 #" ("
0 0 14 3 14 #"customer-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 7 #"))))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"any-over-limit?"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 17 3 11 #";;base case"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"any-over-limit?"
0 0 24 3 1 #" "
0 0 14 3 4 #"BST1"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 17 3 33 #";;No one has outstanding balances"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 15 #"any-over-limit?"
0 0 24 3 1 #" "
0 0 14 3 4 #"BST2"
0 0 24 3 2 #") "
0 0 14 3 4 #"true"
0 0 24 3 2 #") "
0 0 17 3 36 #";;3 people have outstanding balances"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";;Helper Function"
0 0 24 29 1 #"\n"
0 0 17 3 40 #";;cust-balances: ListOfCharge -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 69
(
 #";;consumes a list of charges and produces the total amount of charge"
 #"s"
) 0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 13 #"cust-balances"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloc"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 6 #"empty?"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloc"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #" ]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 5 #"cons?"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloc"
0 0 24 3 3 #") ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 11 #"cust-charge"
0 0 24 3 2 #" ("
0 0 14 3 5 #"first"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloc"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 23 #"                      ("
0 0 14 3 13 #"cust-balances"
0 0 24 3 2 #" ("
0 0 14 3 4 #"rest"
0 0 24 3 1 #" "
0 0 14 3 4 #"aloc"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"cust-balances"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 2 #") "
0 0 21 3 1 #"0"
0 0 24 3 2 #") "
0 0 17 3 11 #";;base case"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"cust-balances"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc1"
0 0 24 3 2 #") "
0 0 21 3 4 #"1300"
0 0 24 3 2 #") "
0 0 17 3 33 #";;Adds charges of the list given "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"cust-balances"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc2"
0 0 24 3 2 #") "
0 0 21 3 4 #"1200"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"cust-balances"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc3"
0 0 24 3 2 #") "
0 0 21 3 3 #"272"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 13 #"cust-balances"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc4"
0 0 24 3 2 #") "
0 0 21 3 4 #"2300"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 17 #";;Helper Function"
0 0 24 29 1 #"\n"
0 0 17 3 32 #";;cust-charge: Charge -> Natural"
0 0 24 29 1 #"\n"
0 0 17 3 51 #";;consumes a charge and produces the amount charged"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 11 #"cust-charge"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-charge"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 14 3 13 #"charge-amount"
0 0 24 3 1 #" "
0 0 14 3 8 #"a-charge"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"cust-charge"
0 0 24 3 1 #" "
0 0 14 3 7 #"Charge1"
0 0 24 3 2 #") "
0 0 21 3 3 #"300"
0 0 24 3 2 #") "
0 0 17 3 32 #";;produces the amount of charge "
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"cust-charge"
0 0 24 3 1 #" "
0 0 14 3 7 #"Charge2"
0 0 24 3 2 #") "
0 0 21 3 4 #"1000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 11 #"cust-charge"
0 0 24 3 1 #" "
0 0 14 3 7 #"Charge3"
0 0 24 3 2 #") "
0 0 21 3 4 #"1000"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Problem 8"
0 0 24 29 1 #"\n"
0 0 17 3 42 #";;increase-limit: BST Number Number -> BST"
0 0 24 29 1 #"\n"
0 0 17 3 101
(
 #";;consumes a binary search tree, a credit card number, and an amount"
 #" of money. The function returns a"
) 0 0 24 29 1 #"\n"
0 0 17 3 6 #";;tree"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 4 #"same"
0 0 17 3 1 #" "
0 0 17 3 2 #"as"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 8 #"original"
0 0 17 3 1 #","
0 0 17 3 1 #" "
0 0 17 3 6 #"except"
0 0 17 3 1 #" "
0 0 17 3 4 #"that"
0 0 17 3 1 #" "
0 0 17 3 3 #"the"
0 0 17 3 1 #" "
0 0 17 3 6 #"credit"
0 0 17 3 6 #" limit"
0 0 17 3 1 #" "
0 0 17 3 2 #"of"
0 0 17 3 1 #" "
0 0 17 3 34 #"the customer with the given credit"
0 0 24 29 1 #"\n"
0 0 17 3 6 #";;card"
0 0 17 3 1 #" "
0 0 17 3 6 #"number"
0 0 17 3 1 #" "
0 0 17 3 3 #"has"
0 0 17 3 35 #" been increased by the given amount"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 14 #"increase-limit"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #" "
0 0 14 3 8 #"card-num"
0 0 24 3 1 #" "
0 0 14 3 3 #"amt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #"]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 9 #"customer?"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"="
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #") "
0 0 14 3 8 #"card-num"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 13 #"make-customer"
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 16 #"customer-contact"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 1 #"+"
0 0 24 3 2 #" ("
0 0 14 3 14 #"customer-limit"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #") "
0 0 14 3 3 #"amt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 16 #"customer-charges"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 13 #"customer-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 14 #"customer-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 24 29 1 #"\n"
0 0 24 3 10 #"         ("
0 0 14 3 13 #"make-customer"
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 16 #"customer-contact"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 14 #"customer-limit"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 16 #"customer-charges"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 14 #"increase-limit"
0 0 24 3 2 #" ("
0 0 14 3 13 #"customer-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #") "
0 0 14 3 8 #"card-num"
0 0 24 3 1 #" "
0 0 14 3 3 #"amt"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 25 #"                        ("
0 0 14 3 14 #"increase-limit"
0 0 24 3 2 #" ("
0 0 14 3 14 #"customer-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #") "
0 0 14 3 8 #"card-num"
0 0 24 3 1 #" "
0 0 14 3 3 #"amt"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"increase-limit"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"234"
0 0 24 3 1 #" "
0 0 21 3 3 #"675"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 17 3 11 #";;base case"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"increase-limit"
0 0 24 3 1 #" "
0 0 14 3 4 #"BST1"
0 0 24 3 1 #" "
0 0 21 3 3 #"234"
0 0 24 3 1 #" "
0 0 21 3 3 #"457"
0 0 24 3 2 #") "
0 0 14 3 4 #"BST1"
0 0 24 3 2 #") "
0 0 17 3 43 #";;no customer with given credit card number"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"increase-limit"
0 0 24 3 1 #" "
0 0 14 3 4 #"BST1"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 21 3 3 #"104"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact1"
0 0 24 3 1 #" "
0 0 21 3 4 #"3104"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc1"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact2"
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc2"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact3"
0 0 24 3 1 #" "
0 0 21 3 4 #"3500"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Susan Piet\""
0 0 24 3 1 #" "
0 0 19 3 17 #"\"60 Yoili Avenue\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"piets@neu.edu\""
0 0 24 3 2 #") "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc3"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"205"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"Fityo Chang\""
0 0 24 3 1 #" "
0 0 19 3 14 #"\"35 Lemay Way\""
0 0 24 3 1 #" "
0 0 19 3 17 #"\"changf@colu.edu\""
0 0 24 3 2 #") "
0 0 21 3 4 #"1500"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 5 #")))) "
0 0 17 3 46 #";;change credit limit for first person in tree"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 14 #"increase-limit"
0 0 24 3 1 #" "
0 0 14 3 4 #"BST2"
0 0 24 3 1 #" "
0 0 21 3 3 #"162"
0 0 24 3 1 #" "
0 0 21 3 4 #"1534"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"126"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact2"
0 0 24 3 1 #" "
0 0 21 3 4 #"3000"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc1"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 2 #"43"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Didi Dong\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"59 Yout Way\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"didid@col.com\""
0 0 24 3 2 #") "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc4"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 2 #"26"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"Hercules Google\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"46 Chant Road\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"changf@BU.net\""
0 0 24 3 2 #") "
0 0 21 3 4 #"1500"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc4"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"151"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact3"
0 0 24 3 1 #" "
0 0 21 3 4 #"1200"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"162"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact1"
0 0 24 3 1 #" "
0 0 21 3 4 #"3734"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc4"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 5 #")))) "
0 0 17 3 67
#";;change credit limit for last person on the right side of the tree"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 17 3 11 #";;Problem 9"
0 0 24 29 1 #"\n"
0 0 17 3 41 #";;add-customer: BST Number Contact -> BST"
0 0 24 29 1 #"\n"
0 0 17 3 96
(
 #";;consumes a binary search tree, a credit card number, and a custome"
 #"r's contact information. The"
) 0 0 24 29 1 #"\n"
0 0 17 3 10 #";;function"
0 0 17 3 1 #" "
0 0 17 3 7 #"returns"
0 0 17 3 1 #" "
0 0 17 3 33 #"a tree with a new customer added."
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 15 3 6 #"define"
0 0 24 3 2 #" ("
0 0 14 3 12 #"add-customer"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #" "
0 0 14 3 10 #"credit-num"
0 0 24 3 1 #" "
0 0 14 3 12 #"contact-info"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 3 #"  ("
0 0 15 3 4 #"cond"
0 0 24 3 3 #" [("
0 0 14 3 8 #"boolean?"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 14 3 10 #"credit-num"
0 0 24 3 1 #" "
0 0 14 3 12 #"contact-info"
0 0 24 3 1 #" "
0 0 21 3 5 #"25000"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #")]"
0 0 24 29 1 #"\n"
0 0 24 3 10 #"        [("
0 0 14 3 9 #"customer?"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 3 #") ("
0 0 14 3 2 #"if"
0 0 24 3 2 #" ("
0 0 14 3 1 #"<"
0 0 24 3 1 #" "
0 0 14 3 10 #"credit-num"
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                             "
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 13 #"make-customer"
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 16 #"customer-contact"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 14 #"customer-limit"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 16 #"customer-charges"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 12 #"add-customer"
0 0 24 3 2 #" ("
0 0 14 3 13 #"customer-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #") "
0 0 14 3 10 #"credit-num"
0 0 24 3 1 #" "
0 0 14 3 12 #"contact-info"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 14 #"customer-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #"))"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 16 #"               ("
0 0 14 3 13 #"make-customer"
0 0 24 3 2 #" ("
0 0 14 3 20 #"customer-card-number"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 16 #"customer-contact"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 14 #"customer-limit"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 16 #"customer-charges"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 13 #"customer-left"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 31 #"                              ("
0 0 14 3 12 #"add-customer"
0 0 24 3 2 #" ("
0 0 14 3 14 #"customer-right"
0 0 24 3 1 #" "
0 0 14 3 3 #"acn"
0 0 24 3 2 #") "
0 0 14 3 10 #"credit-num"
0 0 24 3 1 #" "
0 0 14 3 12 #"contact-info"
0 0 24 3 6 #")))]))"
0 0 24 29 1 #"\n"
0 0 24 3 9 #"         "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"add-customer"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 21 3 3 #"234"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact1"
0 0 24 3 3 #") ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"234"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact1"
0 0 24 3 1 #" "
0 0 21 3 5 #"25000"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 3 #")) "
0 0 17 3 11 #";;base case"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"add-customer"
0 0 24 3 1 #" "
0 0 14 3 4 #"BST1"
0 0 24 3 1 #" "
0 0 21 3 3 #"234"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Goog Foul\""
0 0 24 3 1 #" "
0 0 19 3 16 #"\"98 Lima Street\""
0 0 24 3 1 #" "
0 0 19 3 17 #"\"fgoog@cloud.net\""
0 0 24 3 4 #")) ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"100"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact1"
0 0 24 3 1 #" "
0 0 21 3 4 #"3000"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc1"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 2 #"50"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact2"
0 0 24 3 1 #" "
0 0 21 3 4 #"2000"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc2"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact3"
0 0 24 3 1 #" "
0 0 21 3 4 #"3500"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 1 #")"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"200"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 12 #"\"Susan Piet\""
0 0 24 3 1 #" "
0 0 19 3 17 #"\"60 Yoili Avenue\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"piets@neu.edu\""
0 0 24 3 2 #") "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc3"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"205"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 13 #"\"Fityo Chang\""
0 0 24 3 1 #" "
0 0 19 3 14 #"\"35 Lemay Way\""
0 0 24 3 1 #" "
0 0 19 3 17 #"\"changf@colu.edu\""
0 0 24 3 2 #") "
0 0 21 3 4 #"1500"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc1"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"234"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Goog Foul\""
0 0 24 3 1 #" "
0 0 19 3 16 #"\"98 Lima Street\""
0 0 24 3 1 #" "
0 0 19 3 17 #"\"fgoog@cloud.net\""
0 0 24 3 2 #") "
0 0 21 3 5 #"25000"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 6 #"))))) "
0 0 17 3 39 #";;adds the customer to teh right branch"
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0 0 24 3 1 #"("
0 0 14 3 12 #"check-expect"
0 0 24 3 2 #" ("
0 0 14 3 12 #"add-customer"
0 0 24 3 1 #" "
0 0 14 3 4 #"BST2"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Jake Paul\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"98 Jadobi Way\""
0 0 24 3 1 #" "
0 0 19 3 22 #"\"jake.paul@cgmail.com\""
0 0 24 3 4 #")) ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"126"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact2"
0 0 24 3 1 #" "
0 0 21 3 4 #"3000"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc1"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 2 #"43"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Didi Dong\""
0 0 24 3 1 #" "
0 0 19 3 13 #"\"59 Yout Way\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"didid@col.com\""
0 0 24 3 2 #") "
0 0 21 3 4 #"1000"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc4"
0 0 24 3 1 #" "
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 2 #"26"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 17 #"\"Hercules Google\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"46 Chant Road\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"changf@BU.net\""
0 0 24 3 2 #") "
0 0 21 3 4 #"1500"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc4"
0 0 24 29 1 #"\n"
0 0 24 3 59
#"                                                          ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 2 #"25"
0 0 24 3 2 #" ("
0 0 14 3 12 #"make-contact"
0 0 24 3 1 #" "
0 0 19 3 11 #"\"Jake Paul\""
0 0 24 3 1 #" "
0 0 19 3 15 #"\"98 Jadobi Way\""
0 0 24 3 1 #" "
0 0 19 3 22 #"\"jake.paul@cgmail.com\""
0 0 24 3 2 #") "
0 0 21 3 5 #"25000"
0 0 24 3 1 #" "
0 0 14 3 5 #"empty"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 14 3 5 #"false"
0 0 24 3 2 #") "
0 0 17 3 38 #";;adds the customer to the left branch"
0 0 24 29 1 #"\n"
0 0 24 3 29 #"                            ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"151"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact3"
0 0 24 3 1 #" "
0 0 21 3 4 #"1200"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc2"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 29 1 #"\n"
0 0 24 3 44 #"                                           ("
0 0 14 3 13 #"make-customer"
0 0 24 3 1 #" "
0 0 21 3 3 #"162"
0 0 24 3 1 #" "
0 0 14 3 8 #"Contact1"
0 0 24 3 1 #" "
0 0 21 3 4 #"2200"
0 0 24 3 1 #" "
0 0 14 3 5 #"Aloc4"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 1 #" "
0 0 14 3 5 #"false"
0 0 24 3 5 #")))) "
0 0 24 29 1 #"\n"
0 0 24 29 1 #"\n"
0           0
